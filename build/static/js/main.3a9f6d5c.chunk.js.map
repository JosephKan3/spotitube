{"version":3,"sources":["components/Track.js","components/TrackList.js","components/SearchResults.js","components/NavigationBar.js","components/SearchBar.js","components/Playlist.js","components/YoutubeButton.js","App.js","reportWebVitals.js","index.js"],"names":["Track","props","addTrack","bind","removeTrack","this","isRemoval","className","onClick","onAdd","track","onRemoval","src","image","alt","name","renderAction","artist","album","React","Component","TrackList","tracks","map","key","SearchResults","NavigationBar","href","SearchBar","state","query","handleQueryChange","search","event","setState","target","value","onSearch","placeholder","onChange","Playlist","saveConfirmation","handleNameChange","handleSave","onNameChange","a","onSave","saved","defaultValue","onLogin","YoutubeButton","playlistID","handleSearchPlaylist","handlePlaylistChange","onFindYoutube","onSign","App","searchResults","playlist","playlistName","playlistTracks","youtubeCredentials","youtubeRedirect","spotifyCredentials","spotifyRedirect","handleAdd","handleRemoval","updatePlaylistName","savePlaylist","findYoutubePlaylist","getYoutubeAccessToken","getSpotifyAccessToken","getYoutubeAuthUrl","getSpotifyAuthUrl","localState","JSON","parse","localStorage","getItem","trackPosition","trackNum","length","splice","console","log","setItem","stringify","find","searchTrack","push","axios","get","then","response","authUrl","data","window","location","replace","Promise","resolve","reject","authCode","decodeURIComponent","match","authState","params","credentials","request","responseText","catch","error","hasCreds","undefined","token","tokenFound","filter","youtubeTrackList","bulkSearch","trackNames","searchPromises","i","all","responses","ytPlaylist","filtedYtPlaylist","access_token","playlistTrackUris","uri","encodeURIComponent","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a9f6d5c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Track.css';\r\n\r\nclass Track extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.addTrack = this.addTrack.bind(this)\r\n        this.removeTrack = this.removeTrack.bind(this)\r\n    }\r\n    renderAction() {\r\n        if (this.props.isRemoval) {\r\n            return (\r\n                <button className='TrackAction' onClick={this.removeTrack}>-</button>\r\n            )\r\n        } else {\r\n            return (\r\n                <button className='TrackAction' onClick={this.addTrack}>+</button>\r\n            )\r\n        }\r\n    }\r\n\r\n    addTrack() {\r\n        this.props.onAdd(this.props.track)\r\n    }\r\n\r\n    removeTrack() {\r\n        this.props.onRemoval(this.props.track)\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Track\">\r\n                <div className='TrackInformation'>\r\n                    <div className='TrackName'>\r\n                        <img \r\n                            className=\"TrackImage\" \r\n                            src={this.props.track.image} \r\n                            alt={this.props.track.name}></img>\r\n                        <h3>{this.props.track.name}</h3>\r\n                        {this.renderAction()}\r\n                    </div>\r\n                    <p>{this.props.track.artist} | {this.props.track.album}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Track;\r\n","import React from 'react';\r\nimport './TrackList.css';\r\nimport Track from './Track'\r\n\r\nclass TrackList extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='TrackList'>\r\n                {this.props.tracks.map(track => {\r\n                    return <Track\r\n                    track={track}\r\n                    key={track.key}\r\n                    isRemoval={this.props.isRemoval}\r\n                    onAdd={this.props.onAdd}\r\n                    onRemoval={this.props.onRemoval}\r\n                    />\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrackList;","import React from 'react';\r\nimport './SearchResults.css';\r\nimport TrackList from './TrackList';\r\n\r\nclass SearchResults extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='SearchResults'>\r\n                <h1 className='Subheading'>Search Results</h1>\r\n                <TrackList\r\n                    tracks={this.props.tracks}\r\n                    isRemoval={false}\r\n                    onAdd={this.props.onAdd}\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResults;","import React from 'react';\r\nimport './NavigationBar.css';\r\n\r\nclass NavigationBar extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"Navigation\">\r\n                <h1 className=\"Title\">Spot<span className=\"Highlight\">i</span>Tube</h1>\r\n                <ul className=\"NavLinks\">\r\n                    <li className='NavItem'><a href='#spotify'>Spotify</a></li>\r\n                    <li className='NavItem'><a href='#youtube'>Youtube</a></li>\r\n                </ul>\r\n\r\n            </div>            \r\n\r\n\r\n            // <header class=\"masthead\" id=\"spotify\">\r\n            //     <div class=\"container px-4 px-lg-5 d-flex h-100 align-items-center justify-content-center\">\r\n            //         <div class=\"d-flex justify-content-center\">\r\n            //             <div class=\"text-center\">\r\n            //                 <h1 class=\"mx-auto my-0 text-uppercase\">Playlist Area</h1>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            query: \"\"\r\n        }\r\n        this.handleQueryChange = this.handleQueryChange.bind(this)\r\n        this.search = this.search.bind(this)\r\n    }\r\n\r\n    handleQueryChange(event) {\r\n        this.setState(\r\n            {\r\n                query: event.target.value\r\n            }\r\n        )\r\n    }\r\n    \r\n    search(event) {\r\n        this.props.onSearch(this.state.query)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className='SearchBar'>\r\n                <input\r\n                className=\"SearchInput\"\r\n                placeholder=\"Enter a Song, Album, or Artist\"\r\n                onChange={this.handleQueryChange}\r\n                />\r\n                <button \r\n                className=\"SearchButton\"\r\n                onClick={this.search}\r\n                >Search</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport './Playlist.css';\r\nimport TrackList from \"./TrackList\"\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            saveConfirmation: \"none\"\r\n        }\r\n        this.handleNameChange = this.handleNameChange.bind(this)\r\n        this.handleSave = this.handleSave.bind(this)\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        this.props.onNameChange(event.target.value)\r\n    }\r\n\r\n    saveConfirmation() {\r\n        if (this.state.saveConfirmation === \"none\") {\r\n            return \r\n        } else if (this.state.saveConfirmation === \"saved\") {\r\n            return (\r\n                <div className='SaveConfirmation'>\r\n                    <h3>Saved!</h3>\r\n                </div>\r\n            )\r\n        } else if (this.state.saveConfirmation === \"error\") {\r\n            return (\r\n                <div className='SaveConfirmation'>\r\n                    <h3>Error.</h3>\r\n                </div>\r\n            )\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n\r\n    async handleSave(event) {\r\n        // Handle button render\r\n        // TODO: Error message not being returned\r\n        let saved = await this.props.onSave()\r\n        this.setState({saveConfirmation: saved})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='Playlist'>\r\n                <input\r\n                    className=\"PlaylistName\"\r\n                    defaultValue={this.props.name}\r\n                    onChange={this.handleNameChange}\r\n                />\r\n                <div className='SaveButtons'>\r\n                    <button\r\n                        className='PlaylistSave'\r\n                        onClick={this.props.onLogin}\r\n                    >Log in to Spotify</button>\r\n                    <button\r\n                        className='PlaylistSave'\r\n                        onClick={this.handleSave}\r\n                    >Save Playlist to Spotify</button>\r\n                </div>\r\n                {this.saveConfirmation()}\r\n                <TrackList\r\n                    tracks={this.props.tracks}\r\n                    isRemoval={true}\r\n                    onRemoval={this.props.onRemoval}\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Playlist","import React from 'react';\r\nimport \"./YoutubeButton.css\"\r\n\r\nclass YoutubeButton extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            playlistID: \"\"\r\n        }\r\n\r\n        this.handleSearchPlaylist = this.handleSearchPlaylist.bind(this)\r\n        this.handlePlaylistChange = this.handlePlaylistChange.bind(this)\r\n    }\r\n\r\n    handleSearchPlaylist(event) {\r\n        this.props.onFindYoutube(this.state.playlistID)\r\n    }\r\n\r\n    handlePlaylistChange(event) {\r\n        this.setState({playlistID: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='Youtube'>\r\n                <button\r\n                    onClick={this.props.onSign}\r\n                >Sign in to Youtube</button>\r\n                <input\r\n                    className='PlaylistInput'\r\n                    placeholder=\"Enter Youtube Playlist ID\"\r\n                    onChange={this.handlePlaylistChange}\r\n                />\r\n                <button\r\n                    onClick={this.handleSearchPlaylist}\r\n                >Import Youtube Playlist</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YoutubeButton;","import axios from 'axios'\r\nimport './App.css';\r\nimport React from 'react';\r\nimport SearchResults from './components/SearchResults';\r\nimport NavigationBar from './components/NavigationBar';\r\nimport SearchBar from './components/SearchBar';\r\nimport Playlist from './components/Playlist';\r\nimport YoutubeButton from './components/YoutubeButton';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            searchResults: [],\r\n            playlist: {\r\n                playlistName: \"Enter Playlist Name Here\",\r\n                playlistTracks: []\r\n            },\r\n            youtubeCredentials: {},\r\n            youtubeRedirect: false,\r\n            spotifyCredentials: {},\r\n            spotifyRedirect: false\r\n        }\r\n\r\n        this.handleAdd = this.handleAdd.bind(this)\r\n        this.handleRemoval = this.handleRemoval.bind(this)\r\n        this.updatePlaylistName = this.updatePlaylistName.bind(this)\r\n        this.savePlaylist = this.savePlaylist.bind(this)\r\n        this.search = this.search.bind(this)\r\n        this.findYoutubePlaylist = this.findYoutubePlaylist.bind(this)\r\n        this.getYoutubeAccessToken = this.getYoutubeAccessToken.bind(this)\r\n        this.getSpotifyAccessToken = this.getSpotifyAccessToken.bind(this)\r\n        this.getYoutubeAuthUrl = this.getYoutubeAuthUrl.bind(this)\r\n        this.getSpotifyAuthUrl = this.getSpotifyAuthUrl.bind(this)\r\n\r\n\r\n        // Fetching local state\r\n        let localState = JSON.parse(localStorage.getItem(\"state\"))\r\n        if (localState != null) {\r\n            this.state = localState\r\n        }\r\n    }\r\n\r\n    handleRemoval(track) {\r\n        let tracks = this.state.playlist.playlistTracks\r\n        let trackPosition = -1\r\n        for (let trackNum = 0; trackNum < tracks.length; trackNum++) {\r\n            if (track.key === tracks[trackNum].key) {\r\n                trackPosition = trackNum\r\n            }\r\n        }\r\n        if (trackPosition === -1) {\r\n            return\r\n        } else {\r\n            tracks.splice(trackPosition, 1)\r\n            console.log(this.state.searchResults)\r\n            this.setState({playlist: {\r\n                playlistName: this.state.playlist.playlistName,\r\n                playlistTracks: tracks\r\n            }}, () => {\r\n                localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n            })\r\n            console.log(this.state.searchResults)\r\n        }\r\n    }\r\n\r\n    handleAdd(track) {\r\n        let tracks = this.state.playlist.playlistTracks\r\n        if (tracks.find(searchTrack => {\r\n            return track.key === searchTrack.key\r\n        })) {\r\n            return\r\n        } else {\r\n            tracks.push(track)\r\n            this.setState({playlist: {\r\n                playlistName: this.state.playlist.playlistName,\r\n                playlistTracks: tracks\r\n            }}, () => {\r\n                localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n            })\r\n        }\r\n    }\r\n\r\n    updatePlaylistName(name) {\r\n        this.setState({playlist: {\r\n            playlistName: name,\r\n            playlistTracks: this.state.playlist.playlistTracks\r\n        }})\r\n    }\r\n\r\n    getYoutubeAuthUrl() {\r\n        this.setState({youtubeRedirect: true}, () => {\r\n            localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n            axios.get(\"https://spotitubev2.herokuapp.com/youtube/getAuthUrl\").then(response => {\r\n                let authUrl = response.data\r\n                window.location.replace(authUrl)\r\n            })\r\n        })\r\n    }\r\n\r\n    getYoutubeAccessToken() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                let authCode = decodeURIComponent(window.location.href.match(/code=([^&]*)/)[1])\r\n                let authState = decodeURIComponent(window.location.href.match(/state=([^&]*)/)[1])\r\n                axios.get(\"https://spotitubev2.herokuapp.com/youtube/token\", {params: {\r\n                    authCode:authCode,\r\n                    authState:authState\r\n                }}).then(response => {\r\n                    let credentials = JSON.parse(response.request.responseText)\r\n                    this.setState({\r\n                        youtubeCredentials: credentials,\r\n                        youtubeRedirect: false\r\n                    }, () => {\r\n                        localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n                        resolve(true)\r\n                    })\r\n                }).catch(error => {\r\n                    reject(false)\r\n                })\r\n            } catch {\r\n                reject(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    async findYoutubePlaylist(playlistID) {\r\n        // If authenticated\r\n        let hasCreds = this.state.youtubeCredentials.token !== undefined\r\n        let tokenFound = false\r\n        if (!hasCreds) {\r\n            // If creds are not stored, check for an auth code in URL\r\n            tokenFound = await this.getYoutubeAccessToken().catch(() => {\r\n                tokenFound = false\r\n            })\r\n        }\r\n        // If either credentials or auth code are found, send request\r\n        if (tokenFound || hasCreds) {\r\n            axios.get(\"https://spotitubev2.herokuapp.com/youtube/playlist\", {params: {\r\n                playlistID:playlistID,\r\n                filter: false,\r\n                credentials: this.state.youtubeCredentials\r\n            }}).then(response => {\r\n                let youtubeTrackList = response.data\r\n                this.bulkSearch(youtubeTrackList)\r\n            })\r\n        // Begin auth code flow\r\n        } else {\r\n            this.getYoutubeAuthUrl()\r\n        }\r\n    }\r\n\r\n    async bulkSearch(trackNames) {\r\n        console.log(trackNames)\r\n        let searchPromises = []\r\n        axios.get(\"https://spotitubev2.herokuapp.com/spotify/searchToken\").then(response => {\r\n            for (let i = 0; i < trackNames.length; i++) {\r\n                searchPromises.push(\r\n                    axios.get(\"https://spotitubev2.herokuapp.com/spotify/search\", {params: {\r\n                        query: trackNames[i],\r\n                        token: response.data\r\n                    }})\r\n                )\r\n            }\r\n            Promise.all(searchPromises).then((responses) => {\r\n                let ytPlaylist = responses.map((response) => {\r\n                    // Selecting best recommendation from Spotify\r\n                    return response.data[0]\r\n                })\r\n                let filtedYtPlaylist = ytPlaylist.filter((track) => {\r\n                    return track !== undefined\r\n                })\r\n                console.log(filtedYtPlaylist)\r\n                this.setState({\r\n                    playlist: {\r\n                        playlistName: this.state.playlistName,\r\n                        playlistTracks: filtedYtPlaylist\r\n                    }}, () => {\r\n                    localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    // Spotify Search does not require OAuth\r\n    search(query) {\r\n        console.log(`Searching for: ${query}.`)\r\n        axios.get(\"https://spotitubev2.herokuapp.com/spotify/searchToken\").then(response => {\r\n            axios.get(\"https://spotitubev2.herokuapp.com/spotify/search\", {params: {\r\n                query: query,\r\n                token: response.data\r\n            }}).then((response) => {\r\n                this.setState({searchResults: response.data}, () => {\r\n                    localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    // Spotify Save requires OAuth\r\n    getSpotifyAuthUrl() {\r\n        this.setState({spotifyRedirect: true}, () => {\r\n            axios.get(\"https://spotitubev2.herokuapp.com/spotify/getAuthUrl\").then(response => {\r\n                localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n                let authUrl = response.data\r\n                window.location.replace(authUrl)\r\n            })\r\n        })\r\n    }\r\n\r\n    getSpotifyAccessToken(authCode) {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.state.spotifyRedirect) {\r\n                axios.get(\"https://spotitubev2.herokuapp.com/spotify/token\", {params: {\r\n                    authCode:authCode,\r\n                }}).then(response => {\r\n                    this.setState({\r\n                        spotifyCredentials: response.data,\r\n                        spotifyRedirect: false\r\n                    }, () => {\r\n                        localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n                        resolve()\r\n                    })\r\n                }).catch((error) => {\r\n                    reject(error)\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    async savePlaylist() {\r\n        return new Promise(async (resolve, reject) => {\r\n            // If credentials are stored\r\n            let hasCreds = this.state.spotifyCredentials.access_token !== undefined\r\n            if (!hasCreds) {\r\n                // If not redirected\r\n                if (!this.state.spotifyRedirect) {\r\n                    console.log(\"ONE\")\r\n                    this.getSpotifyAuthUrl()\r\n                    reject(\"authenticating\")\r\n                // If auth code found\r\n                } else {\r\n                    console.log(\"TWO\")\r\n                    let authCode = decodeURIComponent(window.location.href.match(/code=([^&]*)/)[1])\r\n                    await this.getSpotifyAccessToken(authCode)\r\n                }\r\n            }\r\n            // Execute save request\r\n            let playlistTrackUris = this.state.playlist.playlistTracks.map(track => {\r\n                return track.uri\r\n            })\r\n            console.log(\"THREE\")\r\n            axios.get(\"https://spotitubev2.herokuapp.com/spotify/savePlaylist\", {params: {\r\n                playlistName: this.state.playlist.playlistName,\r\n                playlistTracks: encodeURIComponent(JSON.stringify(playlistTrackUris)),\r\n                credentials: this.state.spotifyCredentials\r\n            }}).then(response => {\r\n                // If no error in status, render saved notification\r\n                if (response.status < 400) {\r\n                    // Update credentials in case of refresh access token\r\n                    this.setState({spotifyCredentials: response.data})\r\n                    resolve(\"saved\")\r\n                // If error in status, render error notification\r\n                } else {\r\n                    resolve(\"error\")\r\n                }\r\n            })            \r\n        }) \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='App'>\r\n                <div className=\"SpotifyBox\">\r\n                    <NavigationBar></NavigationBar>\r\n                    <SearchBar\r\n                        onSearch={this.search}\r\n                    />\r\n                    <YoutubeButton\r\n                        onFindYoutube={this.findYoutubePlaylist}\r\n                        onSign={this.getYoutubeAuthUrl}\r\n                    ></YoutubeButton>\r\n                    <div className='Tracks'>\r\n                        <SearchResults\r\n                            tracks={this.state.searchResults}\r\n                            isRemoval={false}\r\n                            onAdd={this.handleAdd}\r\n                        />\r\n                        <Playlist\r\n                            name={this.state.playlist.playlistName}\r\n                            onNameChange={this.updatePlaylistName}\r\n                            tracks={this.state.playlist.playlistTracks}\r\n                            isRemoval={true}\r\n                            onRemoval={this.handleRemoval}\r\n                            onLogin={this.getSpotifyAuthUrl}\r\n                            onSave={this.savePlaylist}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n \r\n          )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}